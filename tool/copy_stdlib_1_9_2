#!/usr/bin/env jruby

# This script is for use with JRuby, to copy the (patched) stdlib files from
# various locations in MRI's layout to JRuby's layout. It should be used
# against the jruby-specific fork of MRI's repository at
# github.com/jruby/ruby. This version is for the 1.9.2 stdlib, and should
# be used against the jruby-ruby_1_9_2 branch.
#
# usage: copy_stdlib <fork clone on jruby-ruby_1_9_2> <jruby dir>

require 'fileutils'

# stdlib notes:
# Win32API is a native ext in MRI but a .rb for us
# dl.rb is generated in MRI(???), static for us
# generator.rb is generator_internal.rb in builtin for us and mostly different from MRI
# rubygems uses our 1.8 version for both 1.8 and 1.9
# tempfile is native on JRuby so there's no tempfile.rb
# timeout is native on JRuby so there's no timeout.rb
# weakref is native on JRuby so there's no weakref.rb
STDLIB_FILES = %w[
  English.rb
  README
  Win32API.rb
  abbrev.rb
  base64.rb
  benchmark.rb
  cgi
  cgi.rb
  cmath.rb
  complex.rb
  csv.rb
  date
  date.rb
  debug.rb
  delegate.rb
  dl.rb
  drb
  drb.rb
  e2mmap.rb
  erb.rb
  fileutils.rb
  find.rb
  forwardable.rb
  getoptlong.rb
  gserver.rb
  ipaddr.rb
  irb
  irb.rb
  logger.rb
  mathn.rb
  matrix.rb
  minitest
  mkmf.rb
  monitor.rb
  mutex_m.rb
  net
  observer.rb
  open-uri.rb
  open3.rb
  optparse
  optparse.rb
  ostruct.rb
  pathname.rb
  pp.rb
  prettyprint.rb
  prime.rb
  profile.rb
  profiler.rb
  pstore.rb
  racc
  rake
  rake.rb
  rational.rb
  rbconfig
  rdoc
  rdoc.rb
  resolv-replace.rb
  resolv.rb
  rexml
  rinda
  rss
  rss.rb
  scanf.rb
  securerandom.rb
  set.rb
  shell
  shell.rb
  shellwords.rb
  singleton.rb
  sync.rb
  test
  thread.rb
  thwait.rb
  time.rb
  tmpdir.rb
  tracer.rb
  tsort.rb
  un.rb
  uri
  uri.rb
  webrick
  webrick.rb
  xmlrpc
]

EXT_FILES = {
  'ext/bigdecimal/lib/bigdecimal' => 'bigdecimal',
  'ext/dl/lib/dl' => 'dl',
  'ext/pty/lib/expect.rb' => 'expect.rb',
  'ext/nkf/lib/kconv.rb' => 'kconv.rb',
  'ext/digest/lib/digest' => 'digest',
  'ext/digest/lib/digest.rb' => 'digest.rb',
  'ext/digest/sha2/lib/sha2.rb' => 'sha2.rb',
  'ext/dl/win32/lib/win32' => 'win32'
}

# yaml files go into src/builtin for jruby
YAML_FILES = %w[
  yaml.rb
  yaml
]

if ARGV.size < 2
  puts "usage: copy_stdlib <jruby ruby fork clone> <jruby dir>"
  exit 1
elsif !File.exist?(ARGV[0]) || !File.directory?(ARGV[0])
  puts "invalid source dir: #{ARGV[0]}"
  exit 1
elsif !File.exist?(ARGV[1]) || !File.directory?(ARGV[1])
  puts "invalid target dir: #{ARGV[1]}"
  exit 1
end

FORK_DIR = ARGV[0]
JRUBY_DIR = ARGV[1]

for file in STDLIB_FILES
  FileUtils.cp_r "#{FORK_DIR}/lib/#{file}", "#{JRUBY_DIR}/lib/ruby/1.9", :verbose => true
end

for file, target in EXT_FILES
  if File.directory? "#{FORK_DIR}/#{file}"
  	FileUtils.cp_r "#{FORK_DIR}/#{file}", "#{JRUBY_DIR}/lib/ruby/1.9/", :verbose => true
  else
  	FileUtils.cp_r "#{FORK_DIR}/#{file}", "#{JRUBY_DIR}/lib/ruby/1.9/#{target}", :verbose => true
  end
end

# disabled; need to reconcile 1.8 and 1.9 yaml
=begin
for file in YAML_FILES
  FileUtils.cp_r "#{FORK_DIR}/lib/#{file}", "#{JRUBY_DIR}/src/builtin", :verbose => true
end
=end
